<Type Name="ImportFunction" FullName="WasmerSharp.ImportFunction">
  <TypeSignature Language="C#" Value="public class ImportFunction : WasmerSharp.WasmerNativeHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportFunction extends WasmerSharp.WasmerNativeHandle" />
  <AssemblyInfo>
    <AssemblyName>WasmerSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>WasmerSharp.WasmerNativeHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Support for surfacing .NET functions to the Wasm module.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportFunction (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Delegate method) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method">The method to wrap.   The method can only contains int, long, float or double arguments.  The method return can include void, int, long, float and double. </param>
        <summary>
               Creates an ImportFunction from a delegate method, the .NET method passed on the delegate will then be available to  be called by the Wasm runtime.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
